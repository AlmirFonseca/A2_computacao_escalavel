services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      -  "6379:6379"

  create_tables:
    image: create_tables:latest
    build: ./mock
    depends_on:
      - postgres
    volumes:
      - ./mock:/app
    command: python create_tables.py

  insert_data:
    image: insert_data:latest
    build: ./mock
    depends_on:
      - create_tables
      - postgres
    volumes:
      - ./mock:/app
    command: python main.py

  
  spark-historic-app:
    image: spark-historic-app:latest
    build: ./server
    depends_on:
      - create_tables
      - postgres
    environment:
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./mock/mock_files:/historic_spark/mock_files
      - ./tasks:/historic_spark/tasks
    command: python historic_data_processor.py

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest  # Default RabbitMQ user (change in production)
      RABBITMQ_DEFAULT_PASS: guest  # Default RabbitMQ password (change in production)
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      retries: 10

  # producer:
  #   build:
  #     context: ./broker/producer
  #   # restart: on-failure
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     RABBITMQ_HOST: rabbitmq

  # consumer:
  #   build:
  #     context: ./broker/consumer
  #   # restart: on-failure
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     RABBITMQ_HOST: rabbitmq

  streamlit:
    build:
      context: ./dashboard
    ports:
      - "8501:8501"
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis

volumes:
  postgres_data:
